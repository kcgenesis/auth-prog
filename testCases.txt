User Authorization & Access Control Program
Kirk Cameron

for all test cases:
----------------begin users.txt----------------
bill:pwbill
joe:pwjoe
bobby:pwbobby
alice:pwalice
----------------end users.txt----------------


test case 0: Account creation, input checking

>only usernames below length 9 should be accepted
>empty usernames should not be accepted
>empty passwords should not be accepted


----------------begin stdout----------------
Welcome to Some Files, Inc!
Press 1 to make an account.
Press 2 to Sign in to access Some Files.
Press ctrl+D to exit.
1
Enter name:
asdfasdff
Username length 9 too long! try again
Enter name:
asdfasdf
Enter password:

No input! try again
Enter name:
asdfasdf 
Enter password:

User added successfully!


Press 1 to make an account.
Press 2 to Sign in to access Some Files.
Press ctrl+D to exit.
----------------end stdout----------------



test case 1: login input checking
>only usernames below length 9 should be accepted
>empty usernames should not be accepted
>empty passwords should not be accepted
>3 tries maximum, before shut out to main menu




test case 1: very wrong logins: input checking

INPUT:
>excessively long name

aaaaaaaa

>borderline good name
aaaaaaaa
>no password

>asdf's to exit

OUTPUT:
----------------begin stdout----------------
Enter name!
aaaaaaaaa
Username length 9 too long! try again
Enter name!
aaaaaaaa
Enter password:

No input! try again
Enter name!
asdf
Enter password:

Login incorrect!
Enter name!
asdf
Enter password:

Login incorrect!
Enter name!
asdf
Enter password:

Login incorrect!
3 tries used: exiting
----------------end stdout----------------

test case 2: wrong logins

INPUT:
>wrong username
kirk
pwbill
kirk
pwalice
>valid username
>wrong pw
bill
pwalice

OUTPUT:
----------------begin stdout----------------
Enter name!
kirk
Enter password:

Login incorrect!
Enter name!
kirk
Enter password:

Login incorrect!
Enter name!
bill
Enter password:

Login incorrect!
3 tries used: exiting
----------------end stdout----------------

test case 3: file name input checking

----------------begin stdout----------------
Enter name!
alice
Enter password:

enter file path:
asdf
the file 'asdf' does not exist! try again
ff
the file 'ff' does not exist! try again
aa
the file 'aa' does not exist! try again

no input! try again
EOF read: exiting
----------------end stdout----------------




test case 4: contradiction-free ACL
----------------begin auth.txt----------------
PERMIT:bobby:file1.txt
DENY:alice:file1.txt
PERMIT:alice:file2.txt
DENY:bobby:file2.txt
----------------end auth.txt----------------

EXPECTATION:
Alice should be able to access file1.txt.  She should not be able to access file2.txt.
Bobby should be able to access file2.txt.  He should not be able to access file1.txt.
Since file3.txt is not mentioned in the ACL, neither Bobby nor Alice can access it.
Joe and Bill should be able to access no files.

PROGRAM OUTPUT:
Logging in as Alice:
----------------begin stdout----------------
Enter name!
alice
Enter password:

enter file path:
file1.txt
Access to file file1.txt denied
enter file path:
file2.txt
--------BEGIN 'file2.txt'--------
the content of file2the content of file2
the content of file2the content of file2
the content of file2the content of file2
--------END 'file2.txt'--------
enter file path:
file3.txt
Access to file file3.txt denied
enter file path:
EOF read: exiting
----------------end stdout----------------



Logging in as Bobby:
----------------begin stdout----------------
Enter name!
bobby
Enter password:

enter file path:
file1.txt
--------BEGIN 'file1.txt'--------
the content of file1the content of file1
the content of file1the content of file1
the content of file1the content of file1
--------END 'file1.txt'--------
enter file path:
file2.txt
Access to file file2.txt denied
enter file path:
file3.txt
Access to file file3.txt denied
enter file path:
EOF read: exiting
----------------end stdout----------------

Logging in as Joe

----------------begin stdout----------------
Enter name!
joe
Enter password:

enter file path:
file1.txt
Access to file file1.txt denied
enter file path:
file2.txt
Access to file file2.txt denied
enter file path:
file3.txt
Access to file file3.txt denied
enter file path:
EOF read: exiting
----------------end stdout----------------

Logging in as Bill

----------------begin stdout----------------
Enter name!
bill
Enter password:

enter file path:
file1.txt
Access to file file1.txt denied
enter file path:
file2.txt
Access to file file2.txt denied
enter file path:
file3.txt
Access to file file3.txt denied
enter file path:
EOF read: exiting
----------------end stdout----------------


test case 5: wildcards & first-rule precedent

--------begin auth.txt--------
PERMIT::file1.txt
DENY:bobby:
PERMIT:bill:
--------end auth.txt--------

EXPECTATION:
Alice should be able to access file1.txt, but not file2.txt or file3.txt.
Joe should be able to access file1.txt, but not file2.txt or file3.txt.
Bobby should be able to access file1.txt (since the first rule takes precedence), but he should not be able to access file2.txt and file3.txt.
Bill should be able to access file1.txt, file2.txt, and file3.txt.

PROGRAM OUTPUT:

Logging in as Alice:
----------------begin stdout----------------
Enter name!
alice
Enter password:

enter file path:
file1.txt
--------BEGIN 'file1.txt'--------
the content of file1the content of file1
the content of file1the content of file1
the content of file1the content of file1
--------END 'file1.txt'--------
enter file path:
file2.txt
Access to file file2.txt denied
enter file path:
file3.txt
Access to file file3.txt denied
enter file path:
EOF read: exiting
----------------end stdout----------------

Logging in as Joe:
----------------begin stdout----------------
Enter name!
joe
Enter password:

enter file path:
file1.txt
--------BEGIN 'file1.txt'--------
the content of file1the content of file1
the content of file1the content of file1
the content of file1the content of file1
--------END 'file1.txt'--------
enter file path:
file2.txt
Access to file file2.txt denied
enter file path:
file3.txt
Access to file file3.txt denied
enter file path:
EOF read: exiting
----------------end stdout----------------


Logging in as Bobby:
----------------begin stdout----------------
Enter name!
bobby
Enter password:

enter file path:
file1.txt
--------BEGIN 'file1.txt'--------
the content of file1the content of file1
the content of file1the content of file1
the content of file1the content of file1
--------END 'file1.txt'--------
enter file path:
file2.txt
Access to file file2.txt denied
enter file path:
file3.txt
Access to file file3.txt denied
enter file path:
EOF read: exiting
----------------end stdout----------------


Logging in as Bill:
----------------begin stdout----------------
Enter name!
bill
Enter password:

enter file path:
file1.txt
--------BEGIN 'file1.txt'--------
the content of file1the content of file1
the content of file1the content of file1
the content of file1the content of file1
--------END 'file1.txt'--------
enter file path:
file2.txt
--------BEGIN 'file2.txt'--------
the content of file2the content of file2
the content of file2the content of file2
the content of file2the content of file2
--------END 'file2.txt'--------
enter file path:
file3.txt
--------BEGIN 'file3.txt'--------
the content of file3the content of file3
the content of file3the content of file3
the content of file3the content of file3
--------END 'file3.txt'--------
enter file path:
EOF read: exiting
----------------end stdout----------------













