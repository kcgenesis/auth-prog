User Authorization & Access Control Program
Kirk Cameron

for all test cases:
----------------begin users.txt----------------
bill:pwbill
joe:pwjoe
bobby:pwbobby
alice:pwalice
----------------end users.txt----------------


test case 0: bad logins

>invalid name
>valid pw

>valid name
>invalid pw

>excessively long name

>no name
----------------begin stdout----------------

----------------end stdout----------------










test case 1: contradiction-free ACL
----------------begin auth.txt----------------
PERMIT:bobby:file1.txt
DENY:alice:file1.txt
PERMIT:alice:file2.txt
DENY:bobby:file2.txt
----------------end auth.txt----------------

EXPECTATION:
Alice should be able to access file1.txt.  She should not be able to access file2.txt.
Bobby should be able to access file2.txt.  He should not be able to access file1.txt.
Since file3.txt is not mentioned in the ACL, neither Bobby nor Alice can access it.
Joe and Bill should be able to access no files.

PROGRAM OUTPUT:
Logging in as Alice:
----------------begin stdout----------------
Enter name!
alice
Enter password!
pwalice
enter file path:
file1.txt
Access to file file1.txt denied
enter file path:
file2.txt
--------BEGIN 'file2.txt'--------
the content of file2the content of file2
the content of file2the content of file2
the content of file2the content of file2
--------END 'file2.txt'--------
enter file path:
file3.txt
Access to file file3.txt denied
enter file path:
EOF read: exiting
----------------end stdout----------------



Logging in as Bobby:
----------------begin stdout----------------
Enter name!
bobby
Enter password!
pwbobby
enter file path:
file1.txt
--------BEGIN 'file1.txt'--------
the content of file1the content of file1
the content of file1the content of file1
the content of file1the content of file1
--------END 'file1.txt'--------
enter file path:
file2.txt
Access to file file2.txt denied
enter file path:
file3.txt
Access to file file3.txt denied
enter file path:
EOF read: exiting
----------------end stdout----------------

Logging in as Joe

----------------begin stdout----------------
Enter name!
joe
Enter password!
pwjoe
enter file path:
file1.txt
Access to file file1.txt denied
enter file path:
file2.txt
Access to file file2.txt denied
enter file path:
file3.txt
Access to file file3.txt denied
enter file path:
EOF read: exiting
----------------end stdout----------------

Logging in as Bill

----------------begin stdout----------------
Enter name!
bill
Enter password!
pwbill
enter file path:
file1.txt
Access to file file1.txt denied
enter file path:
file2.txt
Access to file file2.txt denied
enter file path:
file3.txt
Access to file file3.txt denied
enter file path:
EOF read: exiting
----------------end stdout----------------


test case 1: wildcards & first-rule precedent
--------begin auth.txt--------
PERMIT::file1.txt
DENY:bobby:
PERMIT:bill:
--------end auth.txt--------

EXPECTATION:
Alice and Bobby should be able to access file1.txt.  Since Alice and Bobby are not mentioned in the rest of the ACL, Alice and Bobby are denied access to file2 and file3.
Bobby should be able to access file1.txt (since the first rule takes precedence), but he should not be able to access file2.txt and file3.txt.
Bill should be able to access all files.

PROGRAM OUTPUT:














